
//------------------------------------------------------------------------------
//-- irp6 otm and ottfg
//------------------------------------------------------------------------------



//
//
//            LOAD COMPONENTS
//
//



## Load an OptoforceComponent component
loadComponent("HandForce1","OptoforceComponent")

## Give it a periodic activity
setActivity("HandForce1",0.001,3,ORO_SCHED_RT)
HandForce1.loadService("rosparam");
HandForce1.rosparam.getAll();

stream("HandForce1.force0_out", ros.comm.topic("/optoforce1/force0"))
stream("HandForce1.force0_scaled_out", ros.comm.topic("/optoforce1/force0_scaled"))
stream("HandForce1.tare_in", ros.comm.topic("/optoforce1/tare"))

HandForce1.configure()



## Load an OptoforceComponent component
loadComponent("HandForce2","OptoforceComponent")

## Give it a periodic activity
setActivity("HandForce2",0.001,3,ORO_SCHED_RT)
HandForce2.loadService("rosparam");
HandForce2.rosparam.getAll();

stream("HandForce2.force0_out", ros.comm.topic("/optoforce2/force0"))
stream("HandForce2.force0_scaled_out", ros.comm.topic("/optoforce2/force0_scaled"))
stream("HandForce2.tare_in", ros.comm.topic("/optoforce2/tare"))

HandForce2.configure()


//------------------------------------------------------------------------------
//-- Controller manager
//------------------------------------------------------------------------------
loadComponent("Irp6otScheme", "conman::Scheme");
setActivity("Irp6otScheme", 0.002, 5, ORO_SCHED_RT);
Irp6otScheme.loadService("rosparam")
Irp6otScheme.rosparam.getAll()
Irp6otScheme.loadService("conman_ros")
Irp6otScheme.configure()


loadComponent("Irp6otSupervisor","Irp6otSupervisor")
setActivity("Irp6otSupervisor", 0.1, 4, ORO_SCHED_RT);
Irp6otSupervisor.loadService("rosparam")
Irp6otSupervisor.rosparam.getAll()
Irp6otSupervisor.configure()



loadComponent("Irp6otDiag", "Irp6Diagnostic")
setActivity("Irp6otDiag", 0.1, 1, ORO_SCHED_RT)
Irp6otDiag.loadService("rosparam");
Irp6otDiag.rosparam.getAll();
Irp6otDiag.configure()



//
// Load IRp6otmLimitDetector components for Regulators
//

loadComponent("IRp6otmLimitDetector","LimitDetector")
IRp6otmLimitDetector.loadService("rosparam")
IRp6otmLimitDetector.rosparam.getAll()
IRp6otmLimitDetector.rosparam.getParam("~/Irp6otmMotorParameters/upper_limits", "upper_limits")
IRp6otmLimitDetector.rosparam.getParam("~/Irp6otmMotorParameters/lower_limits", "lower_limits")
IRp6otmLimitDetector.configure()


//
// Load IRp6ottfgLimitDetector components for Regulators
//

loadComponent("IRp6ottfgLimitDetector","LimitDetector")
IRp6ottfgLimitDetector.loadService("rosparam")
IRp6ottfgLimitDetector.rosparam.getAll()
IRp6ottfgLimitDetector.rosparam.getParam("~/Irp6ottfgMotorParameters/upper_limits", "upper_limits")
IRp6ottfgLimitDetector.rosparam.getParam("~/Irp6ottfgMotorParameters/lower_limits", "lower_limits")
IRp6ottfgLimitDetector.configure()


//
// Load PortDoubleSum components for Regulators
//


loadComponent("IRp6otmPortDoubleSum_0","PortDoubleSum")
IRp6otmPortDoubleSum_0.loadService("rosparam")
IRp6otmPortDoubleSum_0.rosparam.getAll()
IRp6otmPortDoubleSum_0.configure()


loadComponent("IRp6otmPortDoubleSum_1","PortDoubleSum")
IRp6otmPortDoubleSum_1.loadService("rosparam")
IRp6otmPortDoubleSum_1.rosparam.getAll()
IRp6otmPortDoubleSum_1.configure()


loadComponent("IRp6otmPortDoubleSum_2","PortDoubleSum")
IRp6otmPortDoubleSum_2.loadService("rosparam")
IRp6otmPortDoubleSum_2.rosparam.getAll()
IRp6otmPortDoubleSum_2.configure()


loadComponent("IRp6otmPortDoubleSum_3","PortDoubleSum")
IRp6otmPortDoubleSum_3.loadService("rosparam")
IRp6otmPortDoubleSum_3.rosparam.getAll()
IRp6otmPortDoubleSum_3.configure()


loadComponent("IRp6otmPortDoubleSum_4","PortDoubleSum")
IRp6otmPortDoubleSum_4.loadService("rosparam")
IRp6otmPortDoubleSum_4.rosparam.getAll()
IRp6otmPortDoubleSum_4.configure()


loadComponent("IRp6otmPortDoubleSum_5","PortDoubleSum")
IRp6otmPortDoubleSum_5.loadService("rosparam")
IRp6otmPortDoubleSum_5.rosparam.getAll()
IRp6otmPortDoubleSum_5.configure()


loadComponent("IRp6otmPortDoubleSum_6","PortDoubleSum")
IRp6otmPortDoubleSum_6.loadService("rosparam")
IRp6otmPortDoubleSum_6.rosparam.getAll()
IRp6otmPortDoubleSum_6.configure()


loadComponent("Irp6ottfgPortDoubleSum","PortDoubleSum")
Irp6ottfgPortDoubleSum.loadService("rosparam")
Irp6ottfgPortDoubleSum.rosparam.getAll()
Irp6ottfgPortDoubleSum.configure()



//
// Load Motors Regulators
//



loadComponent("IRp6otmRegulator_0","IRp6Regulator")
IRp6otmRegulator_0.loadService("rosparam")
IRp6otmRegulator_0.rosparam.getAll()
IRp6otmRegulator_0.configure()


loadComponent("IRp6otmRegulator_1","IRp6Regulator")
IRp6otmRegulator_1.loadService("rosparam")
IRp6otmRegulator_1.rosparam.getAll()
IRp6otmRegulator_1.configure()


loadComponent("IRp6otmRegulator_2","IRp6Regulator")
IRp6otmRegulator_2.loadService("rosparam")
IRp6otmRegulator_2.rosparam.getAll()
IRp6otmRegulator_2.configure()


loadComponent("IRp6otmRegulator_3","IRp6Regulator")
IRp6otmRegulator_3.loadService("rosparam")
IRp6otmRegulator_3.rosparam.getAll()
IRp6otmRegulator_3.configure()


loadComponent("IRp6otmRegulator_4","IRp6Regulator")
IRp6otmRegulator_4.loadService("rosparam")
IRp6otmRegulator_4.rosparam.getAll()
IRp6otmRegulator_4.configure()


loadComponent("IRp6otmRegulator_5","IRp6Regulator")
IRp6otmRegulator_5.loadService("rosparam")
IRp6otmRegulator_5.rosparam.getAll()
IRp6otmRegulator_5.configure()


loadComponent("IRp6otmRegulator_6","IRp6Regulator")
IRp6otmRegulator_6.loadService("rosparam")
IRp6otmRegulator_6.rosparam.getAll()
IRp6otmRegulator_6.configure()


loadComponent("Irp6ottfgRegulator","IRp6Regulator")
Irp6ottfgRegulator.loadService("rosparam")
Irp6ottfgRegulator.rosparam.getAll()
Irp6ottfgRegulator.configure()



// Irp6otm double port spliter

loadComponent("Irp6otmPortDoubleSplit_hw_cp","PortDoubleSplit")
Irp6otmPortDoubleSplit_hw_cp.loadService("rosparam")
Irp6otmPortDoubleSplit_hw_cp.rosparam.getAll()
Irp6otmPortDoubleSplit_hw_cp.configure()


// Irp6otfg double port spliter

loadComponent("Irp6ottfgPortDoubleSplit_hw_cp","PortDoubleSplit")
Irp6ottfgPortDoubleSplit_hw_cp.loadService("rosparam")
Irp6ottfgPortDoubleSplit_hw_cp.rosparam.getAll()
Irp6ottfgPortDoubleSplit_hw_cp.configure()




// Irp6otm double port aggregate

loadComponent("Irp6otmPortDoubleAggregate_hw_p","PortDoubleAggregate")
Irp6otmPortDoubleAggregate_hw_p.loadService("rosparam")
Irp6otmPortDoubleAggregate_hw_p.rosparam.getAll()
Irp6otmPortDoubleAggregate_hw_p.configure()

// Irp6otm double port aggregate desired

loadComponent("Irp6otmPortDoubleAggregate_hw_desired","PortDoubleAggregate")
Irp6otmPortDoubleAggregate_hw_desired.loadService("rosparam")
Irp6otmPortDoubleAggregate_hw_desired.rosparam.getAll()
Irp6otmPortDoubleAggregate_hw_desired.configure()


// Irp6ottfg double port aggregate

loadComponent("Irp6ottfgPortDoubleAggregate_hw_p","PortDoubleAggregate")
Irp6ottfgPortDoubleAggregate_hw_p.loadService("rosparam")
Irp6ottfgPortDoubleAggregate_hw_p.rosparam.getAll()
Irp6ottfgPortDoubleAggregate_hw_p.configure()


// Irp6otm double port aggregate

loadComponent("Irp6otmPortDoubleAggregate_hw_curr","PortDoubleAggregate")
Irp6otmPortDoubleAggregate_hw_curr.loadService("rosparam")
Irp6otmPortDoubleAggregate_hw_curr.rosparam.getAll()
Irp6otmPortDoubleAggregate_hw_curr.configure()


loadComponent("Irp6otmM2J","Irp6otmM2J")
Irp6otmM2J.loadService("rosparam")
Irp6otmM2J.rosparam.getAll()
Irp6otmM2J.rosparam.getParam("~/Irp6otmMotorParameters/synchro_motor_position", "synchro_motor_position")
Irp6otmM2J.configure()

loadComponent("Irp6otmIM2RM","IM2RM") 
Irp6otmIM2RM.loadService("rosparam") 
Irp6otmIM2RM.rosparam.getAll() 
Irp6otmIM2RM.rosparam.getParam("~/Irp6otmMotorParameters/enc_res", "enc_res") 
Irp6otmIM2RM.configure() 

loadComponent("Irp6otmM2Jdesired","Irp6otmM2J")
Irp6otmM2Jdesired.loadService("rosparam")
Irp6otmM2Jdesired.rosparam.getAll()
Irp6otmM2Jdesired.rosparam.getParam("~/Irp6otmMotorParameters/synchro_motor_position", "synchro_motor_position")
Irp6otmM2Jdesired.configure()

loadComponent("Irp6ottfgM2J","Irp6tfgM2J")
Irp6ottfgM2J.configure()

loadComponent("Irp6ottfgIM2RM","IM2RM")  
Irp6ottfgIM2RM.loadService("rosparam") 
Irp6ottfgIM2RM.rosparam.getAll() 
Irp6ottfgIM2RM.rosparam.getParam("~/Irp6ottfgMotorParameters/enc_res", "enc_res") 
Irp6ottfgIM2RM.configure() 

loadComponent("Irp6otmJ2M","Irp6otmJ2M")
Irp6otmJ2M.loadService("rosparam")
Irp6otmJ2M.rosparam.getAll()
Irp6otmJ2M.rosparam.getParam("~/Irp6otmMotorParameters/synchro_motor_position", "synchro_motor_position")
Irp6otmJ2M.rosparam.getParam("~/Irp6otmMotorParameters/lower_limits", "lower_motor_limit")
Irp6otmJ2M.rosparam.getParam("~/Irp6otmMotorParameters/upper_limits", "upper_motor_limit")
Irp6otmJ2M.configure()

loadComponent("Irp6otmForwardKinematic","Irp6otmForwardKinematic")
Irp6otmForwardKinematic.configure()


loadComponent("Irp6otmInverseKinematic","Irp6otmInverseKinematic")
Irp6otmInverseKinematic.configure()


loadComponent("Irp6ottfgJ2M","Irp6tfgJ2M")
Irp6ottfgJ2M.configure()



// Irp6otmSplineTrajectoryGeneratorJoint

loadComponent("Irp6otmSplineTrajectoryGeneratorJoint", "InternalSpaceSplineTrajectoryGenerator")

Irp6otmSplineTrajectoryGeneratorJoint.loadService("rosparam");
Irp6otmSplineTrajectoryGeneratorJoint.rosparam.getAll();


// Irp6ottfgSplineTrajectoryGeneratorJoint

loadComponent("Irp6ottfgSplineTrajectoryGeneratorJoint", "InternalSpaceSplineTrajectoryGenerator")
Irp6ottfgSplineTrajectoryGeneratorJoint.loadService("rosparam");
Irp6ottfgSplineTrajectoryGeneratorJoint.rosparam.getAll();




// Irp6otmSplineTrajectoryGeneratorMotor

loadComponent("Irp6otmSplineTrajectoryGeneratorMotor", "InternalSpaceSplineTrajectoryGenerator")
Irp6otmSplineTrajectoryGeneratorMotor.loadService("rosparam");
Irp6otmSplineTrajectoryGeneratorMotor.rosparam.getAll();



// Irp6ottfgSplineTrajectoryGeneratorMotor

loadComponent("Irp6ottfgSplineTrajectoryGeneratorMotor", "InternalSpaceSplineTrajectoryGenerator")
Irp6ottfgSplineTrajectoryGeneratorMotor.loadService("rosparam");
Irp6ottfgSplineTrajectoryGeneratorMotor.rosparam.getAll();




// Irp6otmPoseInt

loadComponent("Irp6otmPoseInt", "CartesianInterpolator")
Irp6otmPoseInt.configure();

// Irp6otmToolInt

loadComponent("Irp6otmToolInt", "CartesianInterpolator")
Irp6otmToolInt.configure();
Irp6otmToolInt.loadService("rosparam");
Irp6otmToolInt.rosparam.getAll();


// ATI3084

loadComponent("ATI3084", "ATI3084")
setActivity("ATI3084", 0.001, 5, ORO_SCHED_RT)
ATI3084.loadService("rosparam")
ATI3084.rosparam.getAll()
ATI3084.configure()


// Irp6otmForceTransformation
loadComponent("Irp6otmForceTransformation", "ForceTransformation")
Irp6otmForceTransformation.loadService("rosparam");
Irp6otmForceTransformation.rosparam.getAll();
Irp6otmForceTransformation.configure()


// ForceControlLaw

loadComponent("Irp6otmForceControlLaw", "ForceControlLaw")
Irp6otmForceControlLaw.configure()


// ROS Interface


//
// Irp6otmSplineTrajectoryActionJoint
// 

loadComponent("Irp6otmSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6otmSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6otmSplineTrajectoryActionJoint.loadService("rosparam");
Irp6otmSplineTrajectoryActionJoint.rosparam.getAll();
Irp6otmSplineTrajectoryActionJoint.loadService("actionlib")
Irp6otmSplineTrajectoryActionJoint.actionlib.connect("/irp6ot_arm/spline_trajectory_action_joint")
Irp6otmSplineTrajectoryActionJoint.configure()


//
// Irp6ottfgSplineTrajectoryActionJoint
// 

loadComponent("Irp6ottfgSplineTrajectoryActionJoint", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ottfgSplineTrajectoryActionJoint",0.01 ,2 ,ORO_SCHED_RT)
Irp6ottfgSplineTrajectoryActionJoint.loadService("rosparam");
Irp6ottfgSplineTrajectoryActionJoint.rosparam.getAll();
Irp6ottfgSplineTrajectoryActionJoint.loadService("actionlib")
Irp6ottfgSplineTrajectoryActionJoint.actionlib.connect("/irp6ot_tfg/spline_trajectory_action_joint")
Irp6ottfgSplineTrajectoryActionJoint.configure()



//
// Irp6otmSplineTrajectoryActionMotor
// 

loadComponent("Irp6otmSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6otmSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6otmSplineTrajectoryActionMotor.loadService("rosparam");
Irp6otmSplineTrajectoryActionMotor.rosparam.getAll();
Irp6otmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6otmMotorParameters/upper_limits", "upper_limits")
Irp6otmSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6otmMotorParameters/lower_limits", "lower_limits")
Irp6otmSplineTrajectoryActionMotor.loadService("actionlib")
Irp6otmSplineTrajectoryActionMotor.actionlib.connect("/irp6ot_arm/spline_trajectory_action_motor")
Irp6otmSplineTrajectoryActionMotor.configure()


//
// Irp6ottfgSplineTrajectoryActionMotor
// 

loadComponent("Irp6ottfgSplineTrajectoryActionMotor", "InternalSpaceSplineTrajectoryAction")
setActivity("Irp6ottfgSplineTrajectoryActionMotor",0.01 ,2 ,ORO_SCHED_RT)
Irp6ottfgSplineTrajectoryActionMotor.loadService("rosparam");
Irp6ottfgSplineTrajectoryActionMotor.rosparam.getAll();
Irp6ottfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ottfgMotorParameters/upper_limits", "upper_limits")
Irp6ottfgSplineTrajectoryActionMotor.rosparam.getParam("~/Irp6ottfgMotorParameters/lower_limits", "lower_limits")
Irp6ottfgSplineTrajectoryActionMotor.loadService("actionlib")
Irp6ottfgSplineTrajectoryActionMotor.actionlib.connect("/irp6ot_tfg/spline_trajectory_action_motor")
Irp6ottfgSplineTrajectoryActionMotor.configure()



//
// Irp6otmPoseIntAction
//

loadComponent("Irp6otmPoseIntAction", "CartesianTrajectoryAction")
setActivity("Irp6otmPoseIntAction",0.01 ,2 ,ORO_SCHED_RT)
Irp6otmPoseIntAction.configure()
Irp6otmPoseIntAction.loadService("actionlib")
Irp6otmPoseIntAction.actionlib.connect("/irp6ot_arm/pose_trajectory")



//
// Irp6otmToolIntAction
//

loadComponent("Irp6otmToolIntAction", "CartesianTrajectoryAction")
setActivity("Irp6otmToolIntAction",0.01 ,2 ,ORO_SCHED_RT)
Irp6otmToolIntAction.configure()
Irp6otmToolIntAction.loadService("actionlib")
Irp6otmToolIntAction.actionlib.connect("/irp6ot_arm/tool_trajectory")




// joint states


loadComponent("Irp6otmJntPub", "JointStatePublisher");
setActivity("Irp6otmJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6otmJntPub.loadService("rosparam");
Irp6otmJntPub.rosparam.getAll();
Irp6otmJntPub.configure()


// motor states


loadComponent("Irp6otmMotPub", "JointStatePublisher");
setActivity("Irp6otmMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6otmMotPub.loadService("rosparam");
Irp6otmMotPub.rosparam.getAll();
Irp6otmMotPub.configure()


// tfg joint state


loadComponent("Irp6ottfgJntPub", "JointStatePublisher");
setActivity("Irp6ottfgJntPub", 0.01, 2, ORO_SCHED_RT);
Irp6ottfgJntPub.loadService("rosparam");
Irp6ottfgJntPub.rosparam.getAll();
Irp6ottfgJntPub.configure()

// tfg motor state


loadComponent("Irp6ottfgMotPub", "JointStatePublisher");
setActivity("Irp6ottfgMotPub", 0.01, 2, ORO_SCHED_RT);
Irp6ottfgMotPub.loadService("rosparam");
Irp6ottfgMotPub.rosparam.getAll();
Irp6ottfgMotPub.configure()





// WrenchPublisher


loadComponent("Irp6otWrenchPublisher", "WrenchPublisher");
setActivity("Irp6otWrenchPublisher", 0.01, 2, ORO_SCHED_RT);
Irp6otWrenchPublisher.loadService("rosparam");
Irp6otWrenchPublisher.rosparam.getAll();
Irp6otWrenchPublisher.configure()


// Irp6otTfPublisher


loadComponent("Irp6otTfPublisher", "TfPublisher");
// setActivity("Irp6otTfPublisher", 0.01, 2, ORO_SCHED_RT);
setActivityOnCPU("Irp6otTfPublisher", 0.01, 1, ORO_SCHED_RT, 0)
Irp6otTfPublisher.loadService("rosparam");
Irp6otTfPublisher.rosparam.getAll();
Irp6otTfPublisher.configure()


//
//
//               CONNECT COMPONENTS
//
//




var string[] irp6ot_joint_labels(8)

irp6ot_joint_labels[0] = "irp6otm_0"
irp6ot_joint_labels[1] = "irp6otm_1"
irp6ot_joint_labels[2] = "irp6otm_2"
irp6ot_joint_labels[3] = "irp6otm_3"
irp6ot_joint_labels[4] = "irp6otm_4"
irp6ot_joint_labels[5] = "irp6otm_5"
irp6ot_joint_labels[6] = "irp6otm_6"
irp6ot_joint_labels[7] = "irp6ottfg"



connect("Irp6otmForceTransformation.OutputEndEffectorWrench", "Irp6otWrenchPublisher.InputWrench", ConnPolicy())

connect("Irp6otmToolInt.CartesianPositionCommand", "Irp6otTfPublisher.In0", ConnPolicy())


connect("Irp6otmM2J.JointPosition", "Irp6otmJntPub.JointPosition", ConnPolicy());
connect("Irp6otmM2J.JointEstimatedVelocity", "Irp6otmJntPub.JointVelocity", ConnPolicy());
connect("Irp6otmPortDoubleAggregate_hw_curr.OutputPort", "Irp6otmJntPub.JointEffort", ConnPolicy());

connect("Irp6otmIM2RM.RadianMotorPosition", "Irp6otmMotPub.JointPosition", ConnPolicy());
connect("Irp6otmIM2RM.RadianMotorPosition", "Irp6otmMotPub.JointVelocity", ConnPolicy());
connect("Irp6otmIM2RM.RadianMotorPosition", "Irp6otmMotPub.JointEffort", ConnPolicy());

connect("Irp6ottfgM2J.JointPosition", "Irp6ottfgJntPub.JointPosition", ConnPolicy());
connect("Irp6ottfgM2J.JointPosition", "Irp6ottfgJntPub.JointVelocity", ConnPolicy());
connect("Irp6ottfgM2J.JointPosition", "Irp6ottfgJntPub.JointEffort", ConnPolicy());

connect("Irp6ottfgIM2RM.RadianMotorPosition", "Irp6ottfgMotPub.JointPosition", ConnPolicy());
connect("Irp6ottfgIM2RM.RadianMotorPosition", "Irp6ottfgMotPub.JointVelocity", ConnPolicy());
connect("Irp6ottfgIM2RM.RadianMotorPosition", "Irp6ottfgMotPub.JointEffort", ConnPolicy());

connect("Irp6otmToolIntAction.CartesianTrajectoryCommand","Irp6otmToolInt.CartesianTrajectoryCommand", ConnPolicy())
connect("Irp6otmPoseIntAction.CartesianTrajectoryCommand","Irp6otmPoseInt.CartesianTrajectoryCommand", ConnPolicy())
connect("Irp6otmForceTransformation.OutputEndEffectorWrench", "Irp6otmPoseIntAction.CartesianWrench", ConnPolicy())

connect("Irp6otmSplineTrajectoryActionJoint.trajectoryPtr","Irp6otmSplineTrajectoryGeneratorJoint.trajectoryPtr_INPORT", ConnPolicy())
connect("Irp6otmM2J.JointPosition","Irp6otmSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorJoint.JointPositionCommand_OUTPORT","Irp6otmSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())

connect("Irp6ottfgSplineTrajectoryActionJoint.trajectoryPtr","Irp6ottfgSplineTrajectoryGeneratorJoint.trajectoryPtr_INPORT", ConnPolicy())
connect("Irp6ottfgM2J.JointPosition","Irp6ottfgSplineTrajectoryActionJoint.JointPosition", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorJoint.JointPositionCommand_OUTPORT","Irp6ottfgSplineTrajectoryActionJoint.JointPositionCommand", ConnPolicy())


connect("Irp6otmSplineTrajectoryActionMotor.trajectoryPtr","Irp6otmSplineTrajectoryGeneratorMotor.trajectoryPtr_INPORT", ConnPolicy())
connect("Irp6otmIM2RM.RadianMotorPosition","Irp6otmSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorMotor.JointPositionCommand_OUTPORT","Irp6otmSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())

connect("Irp6ottfgSplineTrajectoryActionMotor.trajectoryPtr","Irp6ottfgSplineTrajectoryGeneratorMotor.trajectoryPtr_INPORT", ConnPolicy())
connect("Irp6ottfgIM2RM.RadianMotorPosition","Irp6ottfgSplineTrajectoryActionMotor.JointPosition", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorMotor.JointPositionCommand_OUTPORT","Irp6ottfgSplineTrajectoryActionMotor.JointPositionCommand", ConnPolicy())




connect("Irp6otmForceTransformation.CurrentWristPose", "Irp6otmForwardKinematic.WristOutputPose", ConnPolicy())
connect("Irp6otmForceTransformation.CurrentSensorSlowFilteredWrench", "ATI3084.OutputSlowFilteredWrench", ConnPolicy())
connect("Irp6otmForceTransformation.CurrentSensorFastFilteredWrench", "ATI3084.OutputFastFilteredWrench", ConnPolicy())
connect("Irp6otmForceTransformation.Tool", "Irp6otmToolInt.CartesianPositionCommand", ConnPolicy())
connect("Irp6otmForceControlLaw.OutputEndEffectorPose", "Irp6otmInverseKinematic.InputEndEffectorPose", ConnPolicy())
connect("Irp6otmForceControlLaw.CurrentEndEffectorPose", "Irp6otmForwardKinematic.EndEffectorOutputPose", ConnPolicy())
connect("Irp6otmForceTransformation.OutputEndEffectorWrench", "Irp6otmForceControlLaw.CurrentEndEffectorWrench", ConnPolicy())
connect("Irp6otmForceControlLaw.IsSynchronisedIn",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6otmForceControlLaw.GeneratorActiveOut","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())


connect("IRp6ottfgLimitDetector.OutputPort","Irp6ottfgPortDoubleSplit_hw_cp.InputPort", ConnPolicy())
connect("Irp6ottfgPortDoubleAggregate_hw_p.OutputPort","Irp6ottfgIM2RM.IncrementalMotorPosition", ConnPolicy())
connect("Irp6ottfgIM2RM.RadianMotorPosition","Irp6ottfgSplineTrajectoryGeneratorMotor.JointPosition_INPORT", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorMotor.JointPositionCommand_OUTPORT","IRp6ottfgLimitDetector.InputPort", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorMotor.IsSynchronised_INPORT",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorMotor.GeneratorActive_OUTPORT","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())
connect("Irp6otmForwardKinematic.EndEffectorOutputPose", "Irp6otmPoseInt.CartesianPosition", ConnPolicy())
connect("Irp6otmPoseInt.CartesianPositionCommand", "Irp6otmInverseKinematic.InputEndEffectorPose", ConnPolicy())
connect("Irp6otmPoseInt.IsSynchronisedIn",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6otmPoseInt.GeneratorActiveOut","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())
connect("Irp6otmToolInt.CartesianPositionCommand", "Irp6otmForwardKinematic.Tool", ConnPolicy())
connect("Irp6otmToolInt.CartesianPositionCommand", "Irp6otmInverseKinematic.Tool", ConnPolicy())




connect("IRp6otmLimitDetector.OutputPort","Irp6otmPortDoubleSplit_hw_cp.InputPort", ConnPolicy())
connect("Irp6otmPortDoubleAggregate_hw_p.OutputPort","Irp6otmIM2RM.IncrementalMotorPosition", ConnPolicy())
connect("Irp6otmIM2RM.RadianMotorPosition","Irp6otmSplineTrajectoryGeneratorMotor.JointPosition_INPORT", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorMotor.JointPositionCommand_OUTPORT","IRp6otmLimitDetector.InputPort", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorMotor.IsSynchronised_INPORT",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorMotor.GeneratorActive_OUTPORT","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())


connect("Irp6otmM2J.JointPosition","Irp6otmSplineTrajectoryGeneratorJoint.JointPosition_INPORT", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorJoint.JointPositionCommand_OUTPORT","Irp6otmJ2M.JointPosition", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorJoint.IsSynchronised_INPORT",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6otmSplineTrajectoryGeneratorJoint.GeneratorActive_OUTPORT","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())
connect("Irp6ottfgM2J.JointPosition","Irp6ottfgSplineTrajectoryGeneratorJoint.JointPosition_INPORT", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorJoint.JointPositionCommand_OUTPORT","Irp6ottfgJ2M.JointPosition", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorJoint.IsSynchronised_INPORT",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6ottfgSplineTrajectoryGeneratorJoint.GeneratorActive_OUTPORT","Irp6otSupervisor.GeneratorActiveIn", ConnPolicy())




// connect("Irp6otmM2J.JointPosition","Irp6otmInverseKinematic.CurrentJointPosition", ConnPolicy())
 connect("Irp6otmM2Jdesired.JointPosition","Irp6otmInverseKinematic.CurrentJointPosition", ConnPolicy())
connect("Irp6otmM2J.JointPosition","Irp6otmForwardKinematic.JointPosition", ConnPolicy())
connect("Irp6otmJ2M.JointPosition","Irp6otmInverseKinematic.OutputJointPosition", ConnPolicy())

connect("Irp6otDiag.SynchroStateIn","Irp6otSupervisor.IsSynchronisedOut", ConnPolicy())
connect("Irp6otDiag.HardwaPanicIn","Irp6otSupervisor.IsHardwarePanicOut", ConnPolicy())
connect("Irp6otDiag.HardwaBusyIn","Irp6otSupervisor.IsHardwareBusyOut", ConnPolicy())

connect("Irp6otSupervisor.DoSynchroHiMwOut",Irp6ot_hi_component_mw()+".DoSynchroIn", ConnPolicy())
connect("Irp6otSupervisor.EmergencyStopHiMwOut",Irp6ot_hi_component_mw()+".EmergencyStopIn", ConnPolicy())
connect("Irp6otSupervisor.IsSynchronisedHiMwIn",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6otSupervisor.IsHardwarePanicHiMwIn",Irp6ot_hi_component_mw()+".IsHardwarePanic", ConnPolicy())



for (var int i=0; i < 6; i = i+1) {
	connect("IRp6otmPortDoubleSum_"+i+".InputPort_0","IRp6otmRegulator_"+i+".ComputedCurrentOut", ConnPolicy())
	connect(Irp6ot_hi_component_ec()+"."+irp6ot_joint_labels[i]+".motor_current_command","IRp6otmPortDoubleSum_"+i+".OutputPort", ConnPolicy())
	connect(Irp6ot_hi_component_ec()+"."+irp6ot_joint_labels[i]+".digital_inputs","Irp6otSupervisor.digital_in_"+irp6ot_joint_labels[i], ConnPolicy())
	connect("IRp6otmRegulator_"+i+".MeasuredPosition",Irp6ot_hi_component_ec()+"."+irp6ot_joint_labels[i]+".motor_position", ConnPolicy())
	connect("IRp6otmRegulator_"+i+".EmergencyStopOut","Irp6otSupervisor.EmergencyStopIn", ConnPolicy())
}


connect("IRp6otmPortDoubleSum_6.InputPort_0","IRp6otmRegulator_6.ComputedCurrentOut", ConnPolicy())
connect(Irp6ot_hi_component_mw()+".computedReg_in_irp6otm_6","IRp6otmPortDoubleSum_6.OutputPort", ConnPolicy())
connect("IRp6otmRegulator_6.DesiredPosition",Irp6ot_hi_component_mw()+".DesiredPosition_out_irp6otm_6", ConnPolicy())
connect("IRp6otmRegulator_6.MeasuredPosition",Irp6ot_hi_component_mw()+".MotorPosition_irp6otm_6", ConnPolicy())
connect("IRp6otmRegulator_6.ResetSignalIn",Irp6ot_hi_component_mw()+".RegulatorResetOutput_irp6otm_6", ConnPolicy())
// connect("IRp6otmRegulator_6.SynchroStateIn",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("IRp6otmRegulator_6.EmergencyStopOut","Irp6otSupervisor.EmergencyStopIn", ConnPolicy())



connect("Irp6ottfgPortDoubleSum.InputPort_0","Irp6ottfgRegulator.ComputedCurrentOut", ConnPolicy())
connect(Irp6ot_hi_component_mw()+".computedReg_in_irp6ottfg","Irp6ottfgPortDoubleSum.OutputPort", ConnPolicy())
connect("Irp6ottfgRegulator.DesiredPosition",Irp6ot_hi_component_mw()+".DesiredPosition_out_irp6ottfg", ConnPolicy())
connect("Irp6ottfgRegulator.MeasuredPosition",Irp6ot_hi_component_mw()+".MotorPosition_irp6ottfg", ConnPolicy())
connect("Irp6ottfgRegulator.ResetSignalIn",Irp6ot_hi_component_mw()+".RegulatorResetOutput_irp6ottfg", ConnPolicy())
// connect("Irp6ottfgRegulator.SynchroStateIn",Irp6ot_hi_component_mw()+".IsSynchronised", ConnPolicy())
connect("Irp6ottfgRegulator.EmergencyStopOut","Irp6otSupervisor.EmergencyStopIn", ConnPolicy())



connect("Irp6otmIM2RM.RadianMotorPosition","Irp6otmM2J.MotorPosition", ConnPolicy())

connect("Irp6otmIM2RM.RadianMotorPosition","Irp6otmM2Jdesired.MotorPosition", ConnPolicy())
connect("Irp6otmPortDoubleAggregate_hw_desired.OutputPort","Irp6otmM2Jdesired.DesiredMotorPosition", ConnPolicy())



connect("Irp6otmJ2M.MotorPosition", "IRp6otmLimitDetector.InputPort", ConnPolicy())

connect("Irp6ottfgIM2RM.RadianMotorPosition","Irp6ottfgM2J.MotorPosition", ConnPolicy())
connect("Irp6ottfgJ2M.MotorPosition", "IRp6ottfgLimitDetector.InputPort", ConnPolicy())


for (i=0; i < 7; i = i+1) {
	connect("Irp6otmPortDoubleSplit_hw_cp.OutputPort_"+i,"IRp6otmRegulator_"+i+".DesiredPosition", ConnPolicy())
	connect("Irp6otmPortDoubleAggregate_hw_desired.InputPort_"+i,"Irp6otmPortDoubleSplit_hw_cp.OutputPort_"+i, ConnPolicy())
}
connect("Irp6ottfgPortDoubleSplit_hw_cp.OutputPort_0","Irp6ottfgRegulator.DesiredPosition", ConnPolicy())
connect("Irp6ottfgPortDoubleAggregate_hw_p.InputPort_0",Irp6ot_hi_component_mw()+".MotorPosition_irp6ottfg", ConnPolicy())



for (i=0; i < 6; i = i+1) {
	connect("Irp6otmPortDoubleAggregate_hw_p.InputPort_"+i,Irp6ot_hi_component_ec()+"."+irp6ot_joint_labels[i]+".motor_position", ConnPolicy())
	connect("Irp6otmPortDoubleAggregate_hw_curr.InputPort_"+i,Irp6ot_hi_component_ec()+"."+irp6ot_joint_labels[i]+".motor_current", ConnPolicy())
}

connect("Irp6otmPortDoubleAggregate_hw_p.InputPort_6",Irp6ot_hi_component_mw()+".MotorPosition_irp6otm_6", ConnPolicy())
connect("Irp6otmPortDoubleAggregate_hw_desired.InputPort_0","Irp6otmPortDoubleSplit_hw_cp.OutputPort_0", ConnPolicy())
connect("Irp6ottfgPortDoubleAggregate_hw_p.InputPort_0",Irp6ot_hi_component_mw()+".MotorPosition_irp6ottfg", ConnPolicy())
connect("Irp6otmPortDoubleAggregate_hw_curr.InputPort_6",Irp6ot_hi_component_mw()+".MotorCurrent_irp6otm_6", ConnPolicy())



// CONFIGURE SOME COMPONENTS


Irp6otmSplineTrajectoryGeneratorJoint.configure()
Irp6ottfgSplineTrajectoryGeneratorJoint.configure()
Irp6otmSplineTrajectoryGeneratorMotor.configure()
Irp6ottfgSplineTrajectoryGeneratorMotor.configure()



//
//
// 	    STREAM PORTS
//
//


// stream(Irp6ot_hi_component_mw()+".DoSynchroIn", ros.comm.topic("/irp6ot_hardware_interface/do_synchro_in"))

stream("Irp6otSupervisor.DoSynchroIn", ros.comm.topic("/irp6ot_supervisor/do_synchro_in"))
stream("Irp6otSupervisor.EmergencyStopIn", ros.comm.topic("/irp6ot_supervisor/emergency_stop_in"))

stream("Irp6otDiag.Diagnostics", ros.comm.topic("/diagnostics"));

#stream("Irp6otmToolInt.CartesianPositionCommand", ros.comm.topic("/irp6ot_arm/tool"))

stream("Irp6otmForceControlLaw.CurrentFclParam", ros.comm.topic("/irp6ot_arm/fcl_param"))

stream("Irp6otmForceTransformation.ToolGravityParam", ros.comm.topic("/irp6ot_arm/tg_param"))

stream("Irp6otmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6otm_wrench"));

stream("Irp6ottfgMotPub.joint_state", ros.comm.topic("/irp6ot_tfg/motor_state"));
stream("Irp6otmJntPub.joint_state", ros.comm.topic("irp6ot_arm/joint_states"));
stream("Irp6otmJntPub.joint_state", ros.comm.topic("/joint_states"));
stream("Irp6otmMotPub.joint_state", ros.comm.topic("irp6ot_arm/motor_states"));
stream("Irp6ottfgJntPub.joint_state", ros.comm.topic("/irp6ot_tfg/joint_state"));
stream("Irp6ottfgJntPub.joint_state", ros.comm.topic("/joint_states"));



stream("Irp6otTfPublisher.OutTf", ros.comm.topic("/tf"));
// cartesian position
stream("Irp6otWrenchPublisher.OutputWrenchStamped", ros.comm.topic("/irp6ot_arm/wrist_wrench"));
stream("Irp6otmForwardKinematic.EndEffectorOutputPose", ros.comm.topic("/irp6ot_arm/cartesian_position"))

// ati wrench
#stream("Irp6otmForceTransformation.OutputEndEffectorWrench", ros.comm.topic("/irp6ot_arm/ati_wrench"))

// imu
stream(Irp6ot_imu_component()+".IMU_Msr_OUTPORT", ros.comm.topic("/irp6ot_imu/msr"))

//
//
//           ADD PER
//
//

addPeer("Irp6otScheme", Irp6ot_hi_component_ec());
addPeer("Irp6otScheme", Irp6ot_hi_component_mw());

addPeer("Irp6otScheme", "Irp6otmIM2RM");
addPeer("Irp6otScheme", "Irp6ottfgIM2RM");


//
//  Add PortDoubleSum as Irp6otScheme peers
//

for (i=0; i < 7; i = i+1) {
	addPeer("Irp6otScheme", "IRp6otmPortDoubleSum_"+i)
	addPeer("Irp6otScheme", "IRp6otmRegulator_"+i);
}
addPeer("Irp6otScheme", "Irp6ottfgPortDoubleSum")
addPeer("Irp6otScheme", "Irp6ottfgRegulator");


addPeer("Irp6otSupervisor", "Irp6otScheme");

addPeer("Irp6otScheme", "Irp6otmPortDoubleSplit_hw_cp")
addPeer("Irp6otScheme", "IRp6otmLimitDetector")
addPeer("Irp6otScheme", "Irp6ottfgPortDoubleSplit_hw_cp")
addPeer("Irp6otScheme", "IRp6ottfgLimitDetector")
addPeer("Irp6otScheme", "Irp6otmPortDoubleAggregate_hw_p")
addPeer("Irp6otScheme", "Irp6otmPortDoubleAggregate_hw_desired")
addPeer("Irp6otScheme", "Irp6ottfgPortDoubleAggregate_hw_p")
addPeer("Irp6otScheme", "Irp6otmPortDoubleAggregate_hw_curr")
addPeer("Irp6otScheme", "Irp6otmM2J");
addPeer("Irp6otScheme", "Irp6otmM2Jdesired");
addPeer("Irp6otScheme", "Irp6ottfgM2J");
addPeer("Irp6otScheme", "Irp6otmJ2M");
addPeer("Irp6otScheme", "Irp6otmForwardKinematic");
addPeer("Irp6otScheme", "Irp6otmInverseKinematic");
addPeer("Irp6otScheme", "Irp6ottfgJ2M");
addPeer("Irp6otScheme", "Irp6otmForceTransformation");
addPeer("Irp6otScheme", "Irp6otmForceControlLaw");
addPeer("Irp6otScheme", "Irp6otmSplineTrajectoryGeneratorJoint");
addPeer("Irp6otScheme", "Irp6ottfgSplineTrajectoryGeneratorJoint");
addPeer("Irp6otScheme", "Irp6otmSplineTrajectoryGeneratorMotor");
addPeer("Irp6otScheme", "Irp6ottfgSplineTrajectoryGeneratorMotor");
addPeer("Irp6otScheme", "Irp6otmPoseInt");
addPeer("Irp6otScheme", "Irp6otmToolInt");


//
//
//              ADD BLOCK
//
//



Irp6otScheme.addBlock(Irp6ot_hi_component_ec());
Irp6otScheme.addBlock(Irp6ot_hi_component_mw());


//
//  Add PortDoubleSum as Irp6otScheme blocks
//
for (i=0; i < 7; i = i+1) {
	Irp6otScheme.addBlock("IRp6otmPortDoubleSum_"+i)
	Irp6otScheme.addBlock("IRp6otmRegulator_"+i)
}

Irp6otScheme.addBlock("Irp6ottfgPortDoubleSum")
Irp6otScheme.addBlock("Irp6ottfgRegulator")

Irp6otScheme.addBlock("Irp6otmIM2RM")
Irp6otScheme.addBlock("Irp6ottfgIM2RM")

Irp6otScheme.addBlock("Irp6otmPortDoubleSplit_hw_cp")
Irp6otScheme.addBlock("IRp6otmLimitDetector")
Irp6otScheme.addBlock("Irp6ottfgPortDoubleSplit_hw_cp")
Irp6otScheme.addBlock("IRp6ottfgLimitDetector")
Irp6otScheme.addBlock("Irp6otmPortDoubleAggregate_hw_p")
Irp6otScheme.addBlock("Irp6otmPortDoubleAggregate_hw_desired")
Irp6otScheme.addBlock("Irp6ottfgPortDoubleAggregate_hw_p")
Irp6otScheme.addBlock("Irp6otmPortDoubleAggregate_hw_curr")
Irp6otScheme.addBlock("Irp6otmM2J");
Irp6otScheme.addBlock("Irp6otmM2Jdesired");
Irp6otScheme.addBlock("Irp6ottfgM2J");
Irp6otScheme.addBlock("Irp6otmForwardKinematic");
Irp6otScheme.addBlock("Irp6otmInverseKinematic");
Irp6otScheme.addBlock("Irp6otmJ2M");
Irp6otScheme.addBlock("Irp6ottfgJ2M");
Irp6otScheme.addBlock("Irp6otmForceControlLaw");
Irp6otScheme.addBlock("Irp6otmForceTransformation");

Irp6otScheme.addBlock("Irp6otmSplineTrajectoryGeneratorJoint");
Irp6otScheme.addBlock("Irp6ottfgSplineTrajectoryGeneratorJoint");
Irp6otScheme.addBlock("Irp6otmSplineTrajectoryGeneratorMotor");
Irp6otScheme.addBlock("Irp6ottfgSplineTrajectoryGeneratorMotor");
Irp6otScheme.addBlock("Irp6otmPoseInt");

Irp6otScheme.addBlock("Irp6otmToolInt");


//
//
//         LATCH CONNECTIONS
//
//

Irp6otScheme.latchConnections("Irp6otmPortDoubleAggregate_hw_desired", "Irp6otmM2Jdesired", true);

Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6otmPortDoubleAggregate_hw_p", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6ottfgPortDoubleAggregate_hw_p", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6otmForceControlLaw", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6otmSplineTrajectoryGeneratorJoint", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6ottfgSplineTrajectoryGeneratorJoint", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6otmSplineTrajectoryGeneratorMotor", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6ottfgSplineTrajectoryGeneratorMotor", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "Irp6otmPoseInt", true);

Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6otmPortDoubleAggregate_hw_p", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6ottfgPortDoubleAggregate_hw_p", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6otmForceControlLaw", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6otmSplineTrajectoryGeneratorJoint", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6ottfgSplineTrajectoryGeneratorJoint", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6otmSplineTrajectoryGeneratorMotor", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6ottfgSplineTrajectoryGeneratorMotor", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6otmPoseInt", true);

for (i=0; i < 6; i = i+1) {
	Irp6otScheme.latchConnections(Irp6ot_hi_component_ec(), "IRp6otmRegulator_"+i, true);
}
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "IRp6otmRegulator_6", true);
Irp6otScheme.latchConnections(Irp6ot_hi_component_mw(), "Irp6ottfgRegulator", true);





//
//
//          START COMPONENTS
//INJECTION - Last minute structure modifications:

//Uni - Reporting component
loadComponent("repoUni","OCL::FileReporting")
loadService("repoUni","marshalling")
addPeer("repoUni","Irp6otmForwardKinematic")
addPeer("repoUni","Irp6otmForceTransformation")
repoUni.setPeriod(0.002)
repoUni.reportPort("Irp6otmForwardKinematic","EndEffectorOutputPose")
repoUni.reportPort("Irp6otmForceTransformation","OutputEndEffectorWrench")
repoUni.marshalling.loadProperties("/home/mlotz/orocosPoligon/repoUniConf.cpf")
addPeer("Irp6otScheme", "repoUni");
Irp6otScheme.addBlock("repoUni");

//END_OF_INJECTION
//
//


## Start it


HandForce1.start()
HandForce2.start()


//
//  Start Port Double sums for regulators
//



IRp6otmPortDoubleSum_0.start()
IRp6otmPortDoubleSum_1.start()
IRp6otmPortDoubleSum_2.start()
IRp6otmPortDoubleSum_3.start()
IRp6otmPortDoubleSum_4.start()
IRp6otmPortDoubleSum_5.start()
IRp6otmPortDoubleSum_6.start()
Irp6ottfgPortDoubleSum.start()

//
//  Start regulators
//

//IRp6otmRegulator_0.start()
//IRp6otmRegulator_1.start()
//IRp6otmRegulator_2.start()
//IRp6otmRegulator_3.start()
//IRp6otmRegulator_4.start()
//IRp6otmRegulator_5.start()
IRp6otmRegulator_6.start()
Irp6ottfgRegulator.start()
Irp6otmPortDoubleSplit_hw_cp.start()
IRp6otmLimitDetector.start()
Irp6ottfgPortDoubleSplit_hw_cp.start()
IRp6ottfgLimitDetector.start()
Irp6otmPortDoubleAggregate_hw_p.start()
Irp6otmPortDoubleAggregate_hw_desired.start()
Irp6ottfgPortDoubleAggregate_hw_p.start()
Irp6otmPortDoubleAggregate_hw_curr.start()
Irp6otmIM2RM.start()
Irp6ottfgIM2RM.start()
Irp6otmM2J.start()
Irp6otmM2Jdesired.start()
Irp6ottfgM2J.start()
Irp6otmJ2M.start()
Irp6ottfgJ2M.start()
Irp6otmForwardKinematic.start()
Irp6otmInverseKinematic.start()
ATI3084.start()
Irp6otmJntPub.start()
Irp6otmMotPub.start()
Irp6ottfgJntPub.start()
Irp6ottfgMotPub.start()
Irp6otWrenchPublisher.start()
Irp6otTfPublisher.start()
Irp6otmSplineTrajectoryActionJoint.start()
Irp6ottfgSplineTrajectoryActionJoint.start()
Irp6otmSplineTrajectoryActionMotor.start()
Irp6ottfgSplineTrajectoryActionMotor.start()
Irp6otmPoseIntAction.start()
Irp6otmToolIntAction.start()
Irp6otmToolInt.start()
Irp6otDiag.start()
